# CertNode Receipt Verification Workflow
# Add this to your repository's .github/workflows/ directory

name: Verify CertNode Receipts

on:
  push:
    branches: [main, develop]
    paths:
      - 'receipts/**'
      - 'documents/**'
      - '.github/workflows/certnode-verify.yml'
  pull_request:
    branches: [main]
    paths:
      - 'receipts/**'
      - 'documents/**'
  workflow_dispatch:
    inputs:
      receipt_path:
        description: 'Path to receipt file (optional)'
        required: false
        default: ''
      jwks_url:
        description: 'JWKS URL (optional)'
        required: false
        default: 'https://api.certnode.io/.well-known/jwks.json'

env:
  JWKS_URL: ${{ inputs.jwks_url || secrets.CERTNODE_JWKS_URL || 'https://api.certnode.io/.well-known/jwks.json' }}

jobs:
  verify-receipts:
    name: Verify Receipt Integrity
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changed files detection

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install CertNode CLI
        run: npm install -g @certnode/cli

      - name: Find receipt files
        id: find-receipts
        run: |
          if [ -n "${{ inputs.receipt_path }}" ]; then
            # Manual workflow: specific file
            echo "receipts=${{ inputs.receipt_path }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            # PR: only changed files
            receipts=$(git diff --name-only --diff-filter=AMR origin/${{ github.base_ref }}...HEAD | grep -E '\.(receipt\.json|receipt)$' | tr '\n' ' ')
            echo "receipts=${receipts}" >> $GITHUB_OUTPUT
          else
            # Push: all receipt files
            receipts=$(find receipts/ documents/ -name "*.receipt.json" -o -name "*.receipt" 2>/dev/null | tr '\n' ' ' || echo "")
            echo "receipts=${receipts}" >> $GITHUB_OUTPUT
          fi

      - name: Verify receipts
        if: steps.find-receipts.outputs.receipts != ''
        run: |
          receipt_files="${{ steps.find-receipts.outputs.receipts }}"
          failed=0
          total=0

          echo "üîç Verifying receipts against JWKS: $JWKS_URL"
          echo "Receipt files: $receipt_files"
          echo ""

          for receipt_file in $receipt_files; do
            if [ -f "$receipt_file" ]; then
              total=$((total + 1))
              echo "Verifying: $receipt_file"

              if certnode verify --receipt "$receipt_file" --jwks "$JWKS_URL" --verbose; then
                echo "‚úÖ $receipt_file: VALID"
              else
                echo "‚ùå $receipt_file: INVALID"
                failed=$((failed + 1))
              fi
              echo ""
            else
              echo "‚ö†Ô∏è  File not found: $receipt_file"
            fi
          done

          echo "üìä Verification Summary:"
          echo "Total receipts: $total"
          echo "Valid: $((total - failed))"
          echo "Invalid: $failed"

          if [ $failed -gt 0 ]; then
            echo "‚ùå $failed receipt(s) failed verification"
            exit 1
          else
            echo "‚úÖ All receipts verified successfully"
          fi

      - name: No receipts found
        if: steps.find-receipts.outputs.receipts == ''
        run: |
          echo "‚ÑπÔ∏è  No receipt files found to verify"
          echo "Looking for files matching: *.receipt.json, *.receipt"
          echo "In directories: receipts/, documents/"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[security-audit]') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install -g @certnode/cli @certnode/sdk

      - name: Audit JWKS endpoint
        run: |
          echo "üîí Security Audit for JWKS endpoint: $JWKS_URL"

          # Test JWKS endpoint accessibility
          if curl -f -s "$JWKS_URL" > /tmp/jwks.json; then
            echo "‚úÖ JWKS endpoint accessible"

            # Validate JWKS structure
            if certnode inspect /tmp/jwks.json --format json | jq '.keys | length' > /dev/null; then
              key_count=$(certnode inspect /tmp/jwks.json --format json | jq '.keys | length')
              echo "‚úÖ JWKS structure valid ($key_count keys found)"
            else
              echo "‚ùå JWKS structure invalid"
              exit 1
            fi
          else
            echo "‚ùå JWKS endpoint not accessible"
            exit 1
          fi

      - name: Check for sensitive data
        run: |
          echo "üïµÔ∏è  Checking for sensitive data in receipts..."

          # Look for potential private keys or secrets
          if find . -name "*.receipt.json" -o -name "*.receipt" | xargs grep -l "BEGIN.*PRIVATE\|secret\|password\|token" 2>/dev/null; then
            echo "‚ùå Potential sensitive data found in receipt files"
            exit 1
          else
            echo "‚úÖ No sensitive data detected"
          fi

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[perf-test]') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install CertNode CLI
        run: npm install -g @certnode/cli

      - name: Performance benchmark
        run: |
          echo "‚ö° Running performance benchmark..."

          # Create test receipts if none exist
          mkdir -p test-receipts

          for i in {1..10}; do
            certnode generate receipt -o "test-receipts/receipt-$i.json"
          done

          # Benchmark verification speed
          start_time=$(date +%s%N)

          for receipt in test-receipts/*.json; do
            certnode verify --receipt "$receipt" --jwks "$JWKS_URL" > /dev/null || echo "Expected failure for template receipt"
          done

          end_time=$(date +%s%N)
          duration_ms=$(((end_time - start_time) / 1000000))

          echo "üìä Performance Results:"
          echo "Verified 10 receipts in ${duration_ms}ms"
          echo "Average: $((duration_ms / 10))ms per receipt"

          # Cleanup
          rm -rf test-receipts

  notification:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [verify-receipts]
    if: always() && github.event_name != 'pull_request'

    steps:
      - name: Notify success
        if: needs.verify-receipts.result == 'success'
        run: |
          echo "‚úÖ All CertNode receipts verified successfully!"
          # Add your notification logic here (Slack, email, etc.)

      - name: Notify failure
        if: needs.verify-receipts.result == 'failure'
        run: |
          echo "‚ùå CertNode receipt verification failed!"
          # Add your notification logic here (Slack, email, etc.)
          exit 1