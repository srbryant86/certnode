name: Content Certification Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'certnode-dashboard/**'
      - '.github/workflows/content-certification-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'certnode-dashboard/**'

defaults:
  run:
    working-directory: certnode-dashboard

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: certnode-dashboard/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npm run db:generate

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Run linting
      run: npm run lint

    - name: Run unit tests
      env:
        DATABASE_URL: file:./test.db
        NEXTAUTH_SECRET: test-secret-for-ci
        NEXTAUTH_URL: http://localhost:3000
        SIGNING_SERVICE_URL: http://localhost:8080
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        USE_REDIS_QUEUE: true
      run: npm run test:ci

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: matrix.node-version == 20
      with:
        file: ./certnode-dashboard/coverage/lcov.info
        flags: content-certification
        name: content-certification-coverage

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: certnode-dashboard/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npm run db:generate

    - name: Build application
      env:
        DATABASE_URL: file:./build.db
        NEXTAUTH_SECRET: test-secret-for-build
        NEXTAUTH_URL: http://localhost:3000
      run: npm run build

    - name: Check build artifacts
      run: |
        ls -la .next/
        test -f .next/BUILD_ID

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      working-directory: certnode-dashboard
      run: npm audit --audit-level moderate

    - name: Check for vulnerable dependencies
      working-directory: certnode-dashboard
      run: |
        npm ls --depth=0 || true
        npx better-npm-audit audit --level moderate