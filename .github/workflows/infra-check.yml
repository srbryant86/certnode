name: ci: infra-check (fmt/validate + tfsec/checkov/opa)

on:
  pull_request:
    paths:
      - 'infra/aws/terraform/**'
      - '.github/workflows/infra-check.yml'
  push:
    branches:
      - ci/**
    paths:
      - 'infra/aws/terraform/**'
      - '.github/workflows/infra-check.yml'

jobs:
  lint-validate:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform fmt (check)
        run: terraform -chdir=infra/aws/terraform fmt -check -recursive

      - name: Terraform init (no backend)
        run: terraform -chdir=infra/aws/terraform init -backend=false -upgrade

      - name: Terraform validate
        run: terraform -chdir=infra/aws/terraform validate -no-color

      # ---- tfsec (IaC security) ----
      - name: Install tfsec
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          sudo mv tfsec /usr/local/bin/tfsec
          tfsec --version
      - name: Run tfsec
        run: tfsec --soft-fail --no-color infra/aws/terraform

      # ---- Checkov (policy) ----
      - name: Install Checkov
        run: python3 -m pip install --upgrade pip && pip install --user checkov
      - name: Run Checkov
        run: ~/.local/bin/checkov -d infra/aws/terraform || checkov -d infra/aws/terraform

      # ---- Conftest/OPA (only if we have policies in repo) ----
      - name: Run OPA Conftest (if policies present)
        if: ${{ hashFiles('tools/policy/opa/**/*.rego') != '' }}
        run: |
          docker run --rm -v "$PWD":/project openpolicyagent/conftest:v0.53.0 \
            test -p tools/policy/opa -d infra/aws/terraform

