name: Release SDKs

on:
  push:
    tags:
      - 'sdk-node-v*'
      - 'sdk-web-v*'

permissions:
  contents: read
  id-token: write

jobs:
  publish-node:
    if: startsWith(github.ref_name, 'sdk-node-v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '20.x', '22.x' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          scope: '@certnode'
          always-auth: true
      - name: Run fast tests
        run: node tools/test-fast.js
      - name: Assert NPM_TOKEN present
        if: matrix.node-version == '20.x'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "${NPM_TOKEN}" ]; then
            echo 'NPM_TOKEN GitHub secret is missing. Add it in repo Settings → Secrets → Actions.' >&2
            exit 1
          fi
      - name: Check if version already on npm
        if: matrix.node-version == '20.x'
        id: precheck-node
        shell: bash
        run: |
          PKG='@certnode/sdk'
          VER=$(node -p "require('./sdk/node/package.json').version")
          echo "ver=$VER" >> $GITHUB_OUTPUT
          EXISTS=$(npm view "$PKG@$VER" version 2>/dev/null || true)
          if [ "$EXISTS" = "$VER" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $VER already published; skipping publish step."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: NPM debug (pre-publish)
        if: matrix.node-version == '20.x'
        shell: bash
        run: |
          node --version | sed 's/^/node: /'
          npm --version | sed 's/^/npm:  /'
          printf "registry: "; npm config get registry
          printf "pkg-name: "; node -p "require('./sdk/node/package.json').name"
          printf "pkg-ver:  "; node -p "require('./sdk/node/package.json').version"
          npm whoami || true
      - name: Prime npm auth
        if: matrix.node-version == '20.x'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: |
          mkdir -p "$HOME"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > "$HOME/.npmrc"
          chmod 600 "$HOME/.npmrc"
      - name: Pack Node SDK
        if: matrix.node-version == '20.x'
        working-directory: sdk/node
        run: npm pack --json
      - name: Publish Node SDK
        if: matrix.node-version == '20.x' && steps.precheck-node.outputs.exists == 'false'
        working-directory: sdk/node
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
      - name: Verify npm publish
        if: matrix.node-version == '20.x'
        shell: bash
        run: |
          PKG='@certnode/sdk'
          VER=$(node -p "require('./sdk/node/package.json').version")
          for i in {1..30}; do
            P=$(npm view "$PKG@$VER" version 2>/dev/null || true)
            if [ "$P" = "$VER" ]; then
              echo "Published $PKG@$VER"
              exit 0
            fi
            sleep 6
          done
          echo "Publish not visible on npm after timeout" >&2
          exit 1

  publish-web:
    if: startsWith(github.ref_name, 'sdk-web-v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '20.x', '22.x' ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      - name: Build web SDK (size gate only on 20.x)
        if: matrix.node-version == '20.x'
        run: |
          npm run build:web-sdk
          node tools/check-web-sdk-size.js
      - name: Run fast tests
        run: node tools/test-fast.js
      - name: Pack Web SDK
        if: matrix.node-version == '20.x'
        working-directory: sdk/web
        run: npm pack --json
      - name: Publish Web SDK
        if: matrix.node-version == '20.x' && secrets.NPM_TOKEN != ''
        working-directory: sdk/web
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
      - name: Release summary
        if: matrix.node-version == '20.x' && secrets.NPM_TOKEN != ''
        run: |
          echo "## Web SDK Publish" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Published package version:" >> $GITHUB_STEP_SUMMARY
          npm view @certnode/sdk-web version | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "CDN usage (jsDelivr):" >> $GITHUB_STEP_SUMMARY
          echo '\`\`\`html' >> $GITHUB_STEP_SUMMARY
          echo '<script type="module" src="https://cdn.jsdelivr.net/npm/@certnode/sdk-web@'$(npm view @certnode/sdk-web version)'/dist/index.esm.min.js"></script>' >> $GITHUB_STEP_SUMMARY
          echo '\`\`\`' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "SRI (sha384) for current dist:" >> $GITHUB_STEP_SUMMARY
          node tools/generate-sri.js | sed 's/^/  /' >> $GITHUB_STEP_SUMMARY
