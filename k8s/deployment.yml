# CertNode Kubernetes Deployment
apiVersion: v1
kind: Namespace
metadata:
  name: certnode
  labels:
    name: certnode
    app.kubernetes.io/name: certnode
    app.kubernetes.io/part-of: certnode-platform

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: certnode-config
  namespace: certnode
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
  METRICS_ENABLED: "true"
  JWKS_PATH: "/app/public/.well-known/jwks.json"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: certnode-secrets
  namespace: certnode
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  POSTGRES_PASSWORD: cG9zdGdyZXNfcGFzc3dvcmQ=  # postgres_password
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmQ=        # redis_password

---
# CertNode API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: certnode-api
  namespace: certnode
  labels:
    app: certnode-api
    version: v2.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: certnode-api
  template:
    metadata:
      labels:
        app: certnode-api
        version: v2.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: certnode-api
        image: certnode/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: certnode-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: certnode-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: certnode-config
              key: LOG_LEVEL
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: certnode-config
              key: METRICS_ENABLED
        - name: JWKS_PATH
          valueFrom:
            configMapKeyRef:
              name: certnode-config
              key: JWKS_PATH
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: certnode-secrets
              key: POSTGRES_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: certnode-secrets
              key: REDIS_PASSWORD
        - name: POSTGRES_URL
          value: "postgresql://certnode:$(POSTGRES_PASSWORD)@postgres:5432/certnode"
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: jwks-volume
          mountPath: /app/public/.well-known
          readOnly: true
      volumes:
      - name: logs
        emptyDir: {}
      - name: jwks-volume
        configMap:
          name: certnode-jwks

---
# CertNode API Service
apiVersion: v1
kind: Service
metadata:
  name: certnode-api
  namespace: certnode
  labels:
    app: certnode-api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: certnode-api

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: certnode-api-hpa
  namespace: certnode
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: certnode-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: certnode-api-pdb
  namespace: certnode
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: certnode-api

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: certnode-api-netpol
  namespace: certnode
spec:
  podSelector:
    matchLabels:
      app: certnode-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53