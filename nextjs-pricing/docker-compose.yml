version: '3.8'

services:
  # Next.js Pricing System
  pricing-system:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY:-pk_test_demo}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_demo}
      - NEXT_PUBLIC_ANALYTICS_ENABLED=true
    volumes:
      # Optional: Mount analytics data for persistence
      - analytics_data:/app/analytics-data
    networks:
      - certnode_network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pricing.rule=Host(`pricing.certnode.io`)"
      - "traefik.http.services.pricing.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for analytics caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - certnode_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - certnode_network
    depends_on:
      - pricing-system
    restart: unless-stopped

volumes:
  analytics_data:
    driver: local
  redis_data:
    driver: local

networks:
  certnode_network:
    driver: bridge